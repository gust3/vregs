<?php// Запрет прямого доступа.defined('_JEXEC') or die; // Подключаем библиотеку modellist Joomla.jimport('joomla.application.component.modellist'); /** * Модель списка сообщений компонента HelloWorld. */class gustVMtoolsModelOtzivi extends JModelList{    /**     * Метод для построения SQL запроса для загрузки списка данных.     *     * @return string SQL запрос.     */	 	public function __construct($config = array())	 {	 if (empty($config['filter_fields'])) {	 $config['filter_fields'] = array(	 'id', 'product_id', 'reiting', 'plusy', 'minisy', 'comment', 'user', 'published'	 );	 }	 	 parent::__construct($config);	 }	protected function getListQuery()    {        // Создаем новый query объект.		$orderCol	= $this->state->get('list.ordering');		$orderDirn	= $this->state->get('list.direction');		$search = $this->getState('filter.search');        $db = JFactory::getDBO();        $query = $db->getQuery(true);        $query->select('*');        $query->from('#__vmtools_products_otzivi');		if ( $search == 2)		{			$query->where('premoderation = 0');		}		else		{			$query->where('premoderation = 1');		}		$query->order($db->getEscaped($orderCol.' '.$orderDirn));		        return $query;    }	public function unpublish($arr)	{				$db = JFactory::getDBO();		foreach ($arr as $key=>$val)		{			$query = 'UPDATE #__vmtools_products_otzivi SET published = 0 WHERE id='.$val;			$db->setQuery($query);			$db->query();		}			}	public function delete_otziv($arr)	{				$db = JFactory::getDBO();		foreach ($arr as $key=>$val)		{			$query = 'DELETE FROM #__vmtools_products_otzivi WHERE id ='.$val;			$db->setQuery($query);			$db->query();		}	}	public function publish($arr)	{				$db = JFactory::getDBO();		foreach ($arr as $key=>$val)		{			$query = 'UPDATE #__vmtools_products_otzivi SET published = 1 WHERE id='.$val;			$db->setQuery($query);			$db->query();		}			}	protected function populateState($ordering = null, $direction = null)	{		$search = $this->getUserStateFromRequest($this->context.'.filter.search', 'filter_search');		$this->setState('filter.search', $search);				parent::populateState('id', 'asc');	}}