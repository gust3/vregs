<?php// Запрет прямого доступа.defined('_JEXEC') or die; // Подключаем библиотеку modellist Joomla.jimport('joomla.application.component.modellist'); /** * Модель списка сообщений компонента HelloWorld. */class gustVMtoolsModelAddresses extends JModelList{    /**     * Метод для построения SQL запроса для загрузки списка данных.     *     * @return string SQL запрос.     */	 	public function __construct($config = array())	 {	 if (empty($config['filter_fields'])) {	 $config['filter_fields'] = array(	 'id', 'id_net', 'id_region', 'adress', 'clocks', 'x', 'y', 'published', 'url', 'vidacha_zakazov', 'dostavka', 'oplata', 'label', 'email', 'phones'	 );	 }	 	 parent::__construct($config);	 }	protected function getListQuery()    {        // Создаем новый query объект.		$orderCol	= $this->state->get('list.ordering');		$orderDirn	= $this->state->get('list.direction');		$search = $this->getState('filter.search');		$search2 = $this->getState('filter.search2');		$search3 = $this->getState('filter.search3');        $db = JFactory::getDBO();        $query = $db->getQuery(true);        $query->select('*');        $query->from('#__vmtools_shops_adresses');		$query->order($db->getEscaped($orderCol.' '.$orderDirn));		if (($search) && (is_numeric($search)))		{		$query->where('id_net = '.$search);		}		if (($search2) && (is_numeric($search2)))		{		$query->where('id = '.$search2);		}		$query->where('adress LIKE "%'.$search3.'%"');        return $query;    }	public function unpublish($arr)	{				$db = JFactory::getDBO();		foreach ($arr as $key=>$val)		{			$query = 'UPDATE #__vmtools_shops_adresses SET published = 0 WHERE id='.$val;			$db->setQuery($query);			$db->query();		}			}	public function set_net_settings($arr)	{				$db = JFactory::getDBO();		foreach ($arr as $key=>$val)		{			$query = 'SELECT id_net, phones, email, url, dostavka FROM #__vmtools_shops_adresses WHERE id='.$val;			$db->setQuery($query);			$net = $db->loadObject();						$query = 'UPDATE #__vmtools_netshop SET email = "'.$net->email.'", phone = "'.$net->phones.'", url="'.$net->url.'" WHERE id='.$net->id_net;			$db->setQuery($query);			$db->query();		}			}	public function delete_net($arr)	{				$db = JFactory::getDBO();		foreach ($arr as $key=>$val)		{			$query = 'DELETE FROM #__vmtools_shops_adresses WHERE id ='.$val;			$db->setQuery($query);			$db->query();		}	}	public function publish($arr)	{				$db = JFactory::getDBO();		foreach ($arr as $key=>$val)		{			$query = 'UPDATE #__vmtools_shops_adresses SET published = 1 WHERE id='.$val;			$db->setQuery($query);			$db->query();		}			}	protected function populateState($ordering = null, $direction = null)	{		parent::populateState('id', 'asc');				$search = $this->getUserStateFromRequest($this->context.'.filter.search', 'filter_search');		if (JRequest::getVar('id_net'))		{			$search = JRequest::getVar('id_net');		}		$this->setState('filter.search', $search);				$search2 = $this->getUserStateFromRequest($this->context.'.filter.search2', 'filter_search2');		$this->setState('filter.search2', $search2);				$search3 = $this->getUserStateFromRequest($this->context.'.filter.search3', 'filter_search3');		$this->setState('filter.search3', $search3);				$published = $this->getUserStateFromRequest($this->context.'.filter.state', 'filter_published', '', 'string');		$this->setState('filter.state', $published);	}}